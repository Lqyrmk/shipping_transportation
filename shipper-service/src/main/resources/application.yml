server:
  port: 8004
spring:
  application:
    name: shipper-service

  cloud:
    gateway:
      routes:
        - id: example
          uri: http://example.org
          predicates:
            - Path=/foo/**

  sleuth:
    sampler:
      probability: 0.5 # 设置采样率，默认为 1.0
    baggage:
      enabled: true # 开启 baggage 特性，默认为 false

  kafka:
    bootstrap-servers: localhost:9092 # Kafka 服务器的地址
    consumer:
      group-id: my-group # 消费者组 ID
      auto-offset-reset: earliest # 消费者从头开始消费
    producer:
      retries: 0 # 生产者不进行重试

eureka:
  client:
    #表示是否将自己注册进EurekaServer默认为true。
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetchRegistry: true
    service-url:
      defaultZone: http://localhost:7001/eureka
hystrix:
  command:
    default:
      circuitBreaker:
        requestVolumeThreshold: 10
        errorThresholdPercentage: 50
        sleepWindowInMilliseconds: 5000
logging:
  level:
    org.springframework.cloud.sleuth: DEBUG
